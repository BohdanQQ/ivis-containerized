<VirtualHost *:80>
    ServerName ivis.tapache
    
    ErrorLog /var/log/apache_ivis_error.log
    TransferLog /var/log/apache_ivis_access.log
    LogLevel warn

    <Location /rest/remote>
        Order allow,deny
        Deny from all
    </Location>

    ProxyPreserveHost On
    ProxyPass "/" "http://ivis:8080/"
    ProxyPassReverse "/" "http://ivis:8080/"
</VirtualHost>

# This vhost is here only for the Remote Job Runner.
# It's SSL is realized only by the locally-issued certificate,
# therefore a browser would reject such certificate as it is not verifiable.
# By adjusting the trusted URL base in IVIS-core config, you may allow
# the client, and yourself, to use this vhost instead.
# Do mind, however, that enabling this host will disable the above one
<VirtualHost *:443>
    ServerName ivis.tapache:443
    
    ErrorLog /var/log/apache_ivis_ssl_error.log
    TransferLog /var/log/apache_ivis_ssl_access.log
    LogLevel warn

    SSLVerifyClient none
    SSLProtocol -all +TLSv1.2
    SSLEngine on

    SSLCertificateFile /opt/server.cert.pem
    SSLCertificateKeyFile /opt/server.key.insecure
    SSLCertificateChainFile /opt/ca.cert.pem
    SSLCACertificateFile /opt/ca.cert.pem

    <Location /rest/remote>
        SSLVerifyDepth 3
        SSLVerifyClient require
    </Location>

    ProxyPreserveHost On
    ProxyPass "/" "http://ivis:8080/"
    ProxyPassReverse "/" "http://ivis:8080/"
</VirtualHost>

# this is a public-facing interface
# locally, you'd use http://es:9200
<VirtualHost *:8446>
    ServerName ivis.tapache:8446
    
    ErrorLog /var/log/apache_es_ssl_error.log
    TransferLog /var/log/apache_es_ssl_access.log
    LogLevel warn

    SSLVerifyClient require
    SSLProtocol -all +TLSv1.2
    SSLEngine on

    SSLCertificateFile /opt/server.cert.pem
    SSLCertificateKeyFile /opt/server.key.insecure
    SSLCertificateChainFile /opt/ca.cert.pem
    SSLCACertificateFile /opt/ca.cert.pem
    SSLVerifyDepth 3

    ProxyPreserveHost On
    ProxyPass "/" "http://es:9200/"
    ProxyPassReverse "/" "http://es:9200/"
</VirtualHost>
# TODO:

# <VirtualHost *:${portSandbox}>
#     ServerName ${hostSandbox}:${portSandbox}

#     ErrorLog ${apacheLogsPath}/${hostSandbox}_ssl_error.log
#     TransferLog ${apacheLogsPath}/${hostSandbox}_ssl_access.log
#     LogLevel warn

#     SSLEngine on
#     SSLCertificateFile ${certificateFile}
#     SSLCertificateKeyFile ${certificateKey}
#     SSLCertificateChainFile ${caChainFile}

#     ProxyPreserveHost On
#     ProxyPass "/" "http://127.0.0.1:8081/"
#     ProxyPassReverse "/" "http://127.0.0.1:8081/"
# </VirtualHost>
# EOT

#     if [ -n "${hostAPI}" ]; then
#         cat >> $apacheConf <<EOT
# <VirtualHost *:${portAPI}>
#     ServerName ${hostAPI}:${portAPI}

#     ErrorLog ${apacheLogsPath}/${hostAPI}_ssl_error.log
#     TransferLog ${apacheLogsPath}/${hostAPI}_ssl_access.log
#     LogLevel warn

#     SSLEngine on
#     SSLCertificateFile ${certificateFile}
#     SSLCertificateKeyFile ${certificateKey}
#     SSLCertificateChainFile ${caChainFile}

#     ProxyPreserveHost On
#     ProxyPass "/" "http://127.0.0.1:8082/"
#     ProxyPassReverse "/" "http://127.0.0.1:8082/"
# </VirtualHost>